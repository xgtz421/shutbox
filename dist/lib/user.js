var redis=require("redis"),bcrypt=require("bcrypt");const devNull=require("os")["devNull"];var db=redis.createClient();function User(e){for(var r in e)this[r]=""+e[r]}db.on("ready",function(e){console.log("ready")}),(module.exports=User).prototype.save=function(t){var s;this.id?this.update(t):(s=this,db.incr("user:ids",function(e,r){return e?t(e):(s.id=""+r,void s.hashPassword(function(e){return e?t(e):void s.update(t)}))}))},User.prototype.update=function(r){var t=this,s=t.id;db.set("user:id:"+t.name,s,e=>e?r(e):void db.hmset("user:"+s,t,e=>{r(e)}))},User.prototype.hashPassword=function(t){var s=this;bcrypt.genSalt(12,(e,r)=>e?t(e):(s.salt=r,void bcrypt.hash(s.pass,r,function(e,r){return e?t(e):(s.pass=r,void t())})))},User.getId=(e,r)=>{db.get("user:id:"+e,r)},User.getByName=(e,t)=>{User.getId(e,(e,r)=>e?t(e):void User.get(r,t))},User.get=(e,t)=>{db.hgetall("user:"+e,(e,r)=>e?t(e):void t(null,new User(r)))},User.authenticate=(e,r,s)=>{User.getByName(e,(e,t)=>e?s(e):t.id?void bcrypt.hash(r,t.salt,(e,r)=>e?s(e):r===t.pass?s(null,t):s()):s())},User.prototype.toJSON=function(){return{id:this.id,name:this.name}};